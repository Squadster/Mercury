plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'
}

group 'by.mercury'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

configurations {
    classpath {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

def springBootVersion = '2.2.4.RELEASE'

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    compile ('com.vk.api:sdk:1.0.6') {
        exclude group : 'org.apache.logging.log4j', module: 'log4j'
        exclude group : 'org.apache.logging.log4j', module: 'log4j-core'
        exclude group : 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group : 'org.slf4j', module: 'slf4j-api'
    }

    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"

    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.9'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['/by/mercury/Application',
                              '/by/mercury/core/model/*',
                              '/by/mercury/core/data/*',
                              '/by/mercury/api/request/*',
                              '/by/mercury/api/response/*',
                              '/by/mercury/vk/context/*'
                    ])
        }))
    }
}

task stage {
    dependsOn build
}
